#!/bin/bash

function prompt_user {
    read -p "
Would you like to install $1? (Y or N)
" -n 1 -r #funny way to print a new line

    if [[ $REPLY =~ ^[Yy]$ ]]
    then
        echo '1'
    else
        if [[ $REPLY =~ ^[Nn]$ ]]
        then
            echo '0'
        else
            prompt_user $1
        fi
    fi
}

echo "Running Thor's installation scripts for Ubuntu"
echo "Assuming ssh keys are present in ~/.ssh"
echo "Running apt-get update"
sudo apt-get update
sudo apt-get install software-properties-common python-software-properties

if [ $(prompt_user "Spotify") = '1' ]
then
    echo "*** Updating repository data for Spotify ***"
    sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys BBEBDCB318AD50EC6865090613B00F1FD2C19886
    echo deb http://repository.spotify.com stable non-free | sudo tee /etc/apt/sources.list.d/spotify.list
    sudo apt-get update
    echo "*** Installing Spotify ***"
    sudo apt-get install spotify-client
fi

if [ $(prompt_user 'gnome-open') = '1' ]
then
    echo "*** Installing gnome-open tool ***"
    sudo apt-get install libgnome2-bin
fi

if [ $(prompt_user 'xsel -- tool for command line copy/paste') = '1' ]
then
    echo "*** Installing xsel -- tool for command line copy/paste ***"
    sudo apt-get install xsel
fi

if [ $(prompt_user 'Newest snapshot version of Emacs') = '1' ]
then
    sudo add-apt-repository -y ppa:ubuntu-elisp # for emacs-snapshot
    sudo apt-get update
    echo "*** Installing newest beta version of emacs ***"
    sudo apt-get install emacs-snapshot
fi

if [ $(prompt_user 'Quassel IRC client') = '1' ]
then
   echo "*** Installing Quassel IRC client ***"
   sudo add-apt-repository -y ppa:mamarley/quassel
   sudo apt-get update
   sudo apt-get install quassel-client
fi

if [ $(prompt_user 'Git') = '1' ]
then
    echo "*** Installing git ***"
    sudo apt-get install git
    git config --global user.email "thorkilk@gmail.com"
    git config --global push.default simple
    git config --global core.editor "emacs-snapshot"
fi

if [ $(prompt_user 'Golang compiler') = '1' ]
then
   echo "*** Installing golang compiler ***"
   sudo apt-get install golang
fi

if [ $(prompt_user 'NASM compiler') = '1' ]
then
   echo "*** Installing NASM compiler ***"
   sudo apt-get install nasm
fi


if [ $(prompt_user 'pwsafe and dependencies') = '1' ]
then
    echo "*** Installing pwsafe and dependencies ***"
    mkdir ~/pwsafe
    mkdir ~/scripts
    echo "*** Installing JAVA runtime environment, needed for pwsafe ***"
    sudo apt-get install default-jre
    cd ~/pwsafe
    wget --output-document=PasswordSafeSWT-0.8.1-linux-x86_64.tar.gz "http://sourceforge.net/projects/jpwsafe/files/jpwsafe/SWT-0.8.1/PasswordSafeSWT-0.8.1-linux-x86_64.tar.gz/download?use_mirror=freefr&r=http%3A%2F%2Fsourceforge.net%2Fprojects%2Fjpwsafe%2F%3Fsource%3Drecommended&use_mirror=freefr"
    tar xvzf PasswordSafeSWT-0.8.1-linux-x86_64.tar.gz
    cp ~/pwsafe/PasswordSafeSWT-0.8.1/pwsafe.sh ~/scripts/pwsSafe
    rm PasswordSafeSWT-0.8.1-linux-x86_64.tar.gz
    PATH=$PATH:~/scripts
    cd ~
fi

if [ $(prompt_user 'Sublime Text') = '1' ]
then
    echo "*** Installing Sublime-Text-3 ***"
    sudo add-apt-repository -y ppa:webupd8team/sublime-text-3
    sudo apt-get update
    sudo apt-get install sublime-text-installer
fi

if [ $(prompt_user '.emacs and .bashrc from repo') = '1' ]
then
   echo "*** Cloning .emacs and .bashrc files from repository ***"
   mkdir -p ~/Documents/Uni
   cd Documents/Uni
   git clone git@github.com:Sword-Smith/random_ucph.git
   cd random_ucph
   git pull
   cd ..
   cp ~/Documents/Uni/random_ucph/configuration_files/emacs/thorkilvaerge.emacs ~/.emacs
   cp ~/Documents/Uni/random_ucph/configuration_files/linux/tv_bashrc ~/.bashrc
   cp -r  ~/Documents/Uni/random_ucph/configuration_files/scripts/ ~/ # contains a_to_ss.pl, pwsSafe, short.pwd.py
   source ~/.bashrc
fi

if [ $(prompt_user 'GHC and cabal') = '1' ]
then
    echo "*** GHC and Cabal ***"
    sudo apt-get install ghc
    sudo apt-get install cabal-install
    cabal update
    #cabal sandbox init
fi

if [ $(prompt_user 'hexdiff') = '1' ]
then
    echo "*** hexbiff ***"
    sudo apt-get install hexdiff
fi


if [ $(prompt_user 'gimp') = '1' ]
then
    echo "*** Gimp ***"
    sudo apt-get install gimp
fi

if [ $(prompt_user 'cpanminus') = '1' ]
then
    echo "*** cpanminus ***"
    curl -L https://cpanmin.us | perl - --sudo App::cpanminus
    sudo cpanm --self-upgrade
fi

if [ $(prompt_user 'pdflatex') = '1' ]
then
    echo "*** pdflatex ***"
    sudo apt install texlive-latex-recommended
fi


echo "*** Cleaning up. This is the last command in this script ***"
sudo apt-get autoremove
echo "Remember to disable ALT as HUD in System Settings > Keyboard > Shortcuts > Launchers."
